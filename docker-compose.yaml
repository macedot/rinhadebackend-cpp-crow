version: '3.5'

services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackend-crystal:latest
    build: .
    hostname: api1
    volumes:
      - ./db.string:/service/db.string
    depends_on:
      database:
        condition: service_healthy
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.40GB'

  api2:
    <<: *api
    hostname: api2
    depends_on:
      - api1

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.20GB'

  database: # Banco de dados
    image: docker.io/postgres:alpine
    hostname: database
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_MAX_CONNECTIONS: 1000
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    tmpfs:
      - /run
    healthcheck:
      test: [ "CMD-SHELL", "[ -r /var/run/postgresql/ready ] || ( pg_isready && touch /var/run/postgresql/ready)" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2.0GB'

volumes:
  dbdata:
